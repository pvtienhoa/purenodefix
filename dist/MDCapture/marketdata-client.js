"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const jspurefix_1=require("jspurefix"),cron=require("node-cron"),repo_1=require("jspurefix/dist/types/FIX4.4/repo"),marketdata_factory_1=require("./marketdata-factory"),dbconnector_1=require("./dbconnector"),common_1=require("./common"),LiveQuote_1=require("./LiveQuote"),repo_2=require("jspurefix/dist/types/FIX4.4/repo"),path=require("path");class MarketDataClient extends jspurefix_1.AsciiSession{constructor(e,t){super(e),this.config=e,this.appConfig=t;var i=__dirname;const s=path.join(i,"./.."),o=this.appConfig.LogDays+"d";this.logReceivedMsgs=!0,this.fixLog=e.logFactory.plain(`${this.appConfig.MsgType}-${this.appConfig.UserName}-${this.appConfig.SenderID}-${this.appConfig.TargetID}.messages`,5368709120,!1,!0,o,s),this.eventLog=e.logFactory.plain(`${this.appConfig.MsgType}-${this.appConfig.UserName}-${this.appConfig.SenderID}-${this.appConfig.TargetID}.event`,104857600,!0,!0,o,s),this.logger=e.logFactory.logger(`${this.me}:MDClient`),this.dbConnector=new dbconnector_1.DBConnector(this.appConfig,e.logFactory),this.liveQuotes=new jspurefix_1.Dictionary,this.msgCount=0,this.isIdling=!1,this.idleDuration=0,this.clientTickHandler=0,this.InsertAvgSpreadCronJob=cron.schedule(`*/${t.AvgTerm} * * * *`,()=>{this.insertAvgSpreadsTick()},{scheduled:!1}),this.dailyReconnectCronJob=cron.schedule("0 2 * * *",()=>{this.logger.info("Daily disconnected"),this.eventLog.info("Daily disconnected"),this.done()},{scheduled:!1,timezone:"Etc/UTC"})}onApplicationMsg(e,t){switch(e){case jspurefix_1.MsgType.MassQuote:var i=t.getString(jspurefix_1.MsgTag.QuoteID);if(i){let e=marketdata_factory_1.MarketDataFactory.createMassQuoteAcknowledgement(i);this.send(jspurefix_1.MsgType.MassQuoteAcknowledgement,e)}case jspurefix_1.MsgType.MarketDataSnapshotFullRefresh:case jspurefix_1.MsgType.MarketDataIncrementalRefresh:{this.msgCount++;let i=marketdata_factory_1.MarketDataFactory.parseLiveQuotes(e,t);if(!i.length)throw new Error("no LiveQuotes from Parsed!");i.forEach(e=>{let t;(t=e.symbol?this.liveQuotes.get(e.symbol):this.liveQuotes.values().find(t=>t.reqID===e.reqID)).update(e),this.liveQuotes.addUpdate(t.symbol,t)}),this.isIdling&&(this.isIdling=!1);break}case jspurefix_1.MsgType.SecurityList:this.logger.info("Security List received!")}}onStopped(){this.cleanup()}onDecoded(e,t){this.fixLog.info(t)}onEncoded(e,t){this.fixLog.info(jspurefix_1.AsciiSession.asPiped(t))}onReady(e){this.eventLog.info("Logged on!"),this.logger.info("ready");try{this.dbConnector.querySymbols().then(e=>{this.eventLog.info(`Symbol list accquired, count: ${e.length}`),e.forEach(e=>{let t=new LiveQuote_1.LiveQuote(e.currencypairname,e.requestId,this.appConfig.Broker,0,0,e.Digit);this.liveQuotes.addUpdate(e.currencypairname,t);let i=marketdata_factory_1.MarketDataFactory.createMarketDataRequest(t.reqID,repo_2.SubscriptionRequestType.SnapshotAndUpdates,t.symbol,repo_1.MDUpdateType.IncrementalRefresh);this.eventLog.info(`Sending MDRequest to host: ${this.appConfig.Host}: ${this.appConfig.Port}`),this.send(jspurefix_1.MsgType.MarketDataRequest,i)}),this.InsertAvgSpreadCronJob.start(),this.eventLog.info("Cronjob for inserting AvgSpreads Started!"),this.dailyReconnectCronJob.start(),this.eventLog.info("Cronjob for daily Reconnect Started!"),this.clientTickHandler=common_1.Common.startInterval(()=>{this.clientTick()},200),this.eventLog.info("Interval job for updating LiveQuotes Started!")})}catch(e){throw this.eventLog.error(e),this.logger.error(e),this.cleanup(),e}process.on("SIGINT",function(){console.log("Caught interrupt signal"),process.exit()})}onLogon(e,t,i){return this.eventLog.info("Trying to Log on!"),this.logger.info(`peer logs in user ${t}`),!0}updateLiveQuotesTick(){this.liveQuotes&&this.dbConnector&&this.sessionState.state===jspurefix_1.SessionState.PeerLoggedOn&&this.dbConnector.updateLiveQuotes(this.liveQuotes.values()).then(e=>{}).catch(e=>{throw this.eventLog.error(e),this.logger.error(e),this.cleanup(),e})}insertAvgSpreadsTick(){this.liveQuotes&&this.dbConnector&&this.sessionState.state===jspurefix_1.SessionState.PeerLoggedOn&&this.dbConnector.insertAvgSpreads(this.liveQuotes.values()).then(e=>{e&&this.eventLog.info("AVGSpreads Inserted")}).catch(e=>{throw this.eventLog.error(e),this.logger.error(e),this.cleanup(),e})}clientTick(){this.isIdling?this.idleDuration+=200:this.idleDuration=0,this.isIdling=!0,this.idleDuration>=60*this.appConfig.NoMsgResetTimeout*1e3&&(this.eventLog.info(`Client has been idle for ${this.appConfig.NoMsgResetTimeout} minutes, Reconnecting`),this.logger.info(`Client has been idle for ${this.appConfig.NoMsgResetTimeout} minutes, Reconnecting`),this.done()),this.updateLiveQuotesTick(),this.liveQuotes.values().forEach(e=>{e.lqFlag=!1,this.liveQuotes.addUpdate(e.symbol,e)})}cleanup(){clearInterval(this.clientTickHandler),this.clientTickHandler=null,this.liveQuotes=null,this.InsertAvgSpreadCronJob.destroy(),this.InsertAvgSpreadCronJob.destroy(),this.dailyReconnectCronJob.destroy(),this.msgCount=null,this.isIdling=null,this.idleDuration=null,this.dbConnector.stop(),this.eventLog.info("Client stopped!"),this.logger.info("Stopped!"),this.fixLog=null,this.eventLog=null}}exports.MarketDataClient=MarketDataClient;