{"version":3,"file":"fxcmMD-factory.js","sourceRoot":"","sources":["../../MDCapture/fxcmMD-factory.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n    IInstrument,\r\n    IMarketDataRequest,\r\n    IMarketDataSnapshotFullRefresh,\r\n    IMarketDataIncrementalRefresh,\r\n    ISecurityListRequest,\r\n    ITestRequest,\r\n    IMarketDataRequestNoRelatedSym\r\n} from 'jspurefix/dist/types/FIXFXCM/quickfix'\r\nimport { MsgView, MsgType } from 'jspurefix';\r\nimport { Common } from './common';\r\n\r\nexport interface ILiveQuotes {\r\n    TimeStamp: Date;\r\n    Symbol: string;\r\n    BrokerName: string;\r\n    Bid: number;\r\n    Ask: number;\r\n    Spread: number;\r\n    SpreadAvg?: number;\r\n    fpoint?: number;\r\n}\r\n\r\nexport interface IAvegareSpread {\r\n    TimeStamp: Date;\r\n    Symbol: string;\r\n    BrokerName: string;\r\n    Duration: number;\r\n    AvgSpread: number;\r\n}\r\n\r\nexport class MarketDataFactory {\r\n\r\n    /**\r\n     * createMarketDataRequest\r\n     */\r\n    public static createMarketDataRequest(requestId: string, msgType: string = '1', symbols: string[]): IMarketDataRequest {\r\n        let instruments = symbols.map(s => {\r\n            let i :IInstrument = { Symbol: s}\r\n            let g :IMarketDataRequestNoRelatedSym = {Instrument: i}\r\n            return g\r\n         })\r\n        return {\r\n            SubscriptionRequestType: msgType,\r\n            MDReqID: requestId,\r\n            MarketDepth: 0,\r\n            MDUpdateType: 1,\r\n            NoRelatedSym: [{\r\n                Instrument: {Symbol: \"EUR/USD\"}\r\n            }],\r\n            NoMDEntryTypes: [\r\n                {\r\n                    MDEntryType: \"0\"\r\n                },\r\n                {\r\n                    MDEntryType: \"1\"\r\n                }\r\n            ]\r\n        } as IMarketDataRequest;\r\n    }\r\n\r\n    public static createSecurityListRequest(requestId: string, msgType: number = 0): ISecurityListRequest {\r\n        return {\r\n            SecurityReqID: requestId,\r\n            SecurityListRequestType: msgType\r\n        } as ISecurityListRequest\r\n    }\r\n\r\n    public static createTestRequest(requestId: string) :ITestRequest {\r\n        return {\r\n            TestReqID: requestId\r\n        } as ITestRequest\r\n    }\r\n\r\n    /**\r\n     * parseLiveQuote\r\n     */\r\n    public static parseLiveQuote(msgType: string, msgView: MsgView): ILiveQuotes {\r\n        switch (msgType) {\r\n            case MsgType.MarketDataSnapshotFullRefresh: {\r\n                // create an object and cast to the interface\r\n                const md: IMarketDataSnapshotFullRefresh = msgView.toObject()\r\n                const b = (md.NoMDEntries.find(g => g.MDEntryType === \"0\")) ? md.NoMDEntries.find(g => g.MDEntryType === \"0\").MDEntryPx : 0\r\n                const a = (md.NoMDEntries.find(g => g.MDEntryType === \"1\")) ? md.NoMDEntries.find(g => g.MDEntryType === \"1\").MDEntryPx : 0\r\n\r\n                let lq: ILiveQuotes = {\r\n                    TimeStamp: null,\r\n                    Symbol: md.Instrument.Symbol,\r\n                    BrokerName: md.MDReqID,\r\n                    Bid: b,\r\n                    Ask: a,\r\n                    Spread: a - b,\r\n                    SpreadAvg: 0,\r\n                    fpoint: 5\r\n                }\r\n                return lq\r\n            }\r\n\r\n            case MsgType.MarketDataIncrementalRefresh: {\r\n                const md: IMarketDataIncrementalRefresh = msgView.toObject()\r\n                const b = (md.NoMDEntries.find(g => g.MDEntryType === \"0\")) ? md.NoMDEntries.find(g => g.MDEntryType === \"0\").MDEntryPx : 0\r\n                const a = (md.NoMDEntries.find(g => g.MDEntryType === \"1\")) ? md.NoMDEntries.find(g => g.MDEntryType === \"1\").MDEntryPx : 0\r\n\r\n                let lq: ILiveQuotes = {\r\n                    TimeStamp: null,\r\n                    Symbol: md.NoMDEntries[0].Instrument.Symbol,\r\n                    BrokerName: 'nBroker',\r\n                    Bid: b,\r\n                    Ask: a,\r\n                    Spread: a - b,\r\n                    SpreadAvg: 0\r\n                }\r\n                return lq\r\n            }\r\n            default: {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n"]}