{"version":3,"file":"LiveQuote.js","sourceRoot":"","sources":["../../MDCapture/LiveQuote.ts"],"names":[],"mappings":";;AAAA,qCAAkC;AAqBlC,MAAa,SAAS;IAKlB,YACY,OAAe,EACf,MAAc,EACd,WAAmB,EACnB,IAAY,EACZ,IAAY,EACZ,UAAkB,CAAC,EACnB,aAAmB,IAAI,EACvB,UAAkB,CAAC,EACnB,aAAqB,CAAC,EACtB,aAAqB,CAAC,EACtB,eAAuB,CAAC,EACxB,UAAmB,KAAK,EACxB,WAAoB,KAAK;QAZzB,YAAO,GAAP,OAAO,CAAQ;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAQ;QACnB,SAAI,GAAJ,IAAI,CAAQ;QACZ,SAAI,GAAJ,IAAI,CAAQ;QACZ,YAAO,GAAP,OAAO,CAAY;QACnB,eAAU,GAAV,UAAU,CAAa;QACvB,YAAO,GAAP,OAAO,CAAY;QACnB,eAAU,GAAV,UAAU,CAAY;QACtB,eAAU,GAAV,UAAU,CAAY;QACtB,iBAAY,GAAZ,YAAY,CAAY;QACxB,YAAO,GAAP,OAAO,CAAiB;QACxB,aAAQ,GAAR,QAAQ,CAAiB;IAErC,CAAC;IAID,IAAW,KAAK,KAAa,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAClD,IAAW,KAAK,CAAC,CAAS,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IAEhD,IAAW,SAAS,KAAW,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IACxD,IAAW,SAAS,CAAC,CAAO,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;IAEtD,IAAW,MAAM,KAAa,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACpD,IAAW,MAAM,CAAC,CAAS,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;IAElD,IAAW,UAAU,KAAa,OAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IAC5D,IAAW,UAAU,CAAC,CAAS,IAAI,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;IAE1D,IAAW,GAAG,KAAa,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9C,IAAW,GAAG,CAAC,CAAS,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;IAE5C,IAAW,GAAG,KAAa,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9C,IAAW,GAAG,CAAC,CAAS,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;IAE5C,IAAW,MAAM,KAAa,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACpD,IAAW,MAAM,CAAC,CAAS,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;IAElD,IAAW,MAAM,KAAa,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACpD,IAAW,MAAM,CAAC,CAAS,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;IAElD,IAAW,SAAS,KAAa,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAC1D,IAAW,SAAS,CAAC,CAAS,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;IAExD,IAAW,SAAS,KAAa,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAC1D,IAAW,SAAS,CAAC,CAAS,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;IAExD,IAAW,QAAQ,KAAa,OAAO,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAC3D,IAAW,QAAQ,CAAC,CAAS,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC,CAAC;IAEzD,IAAW,MAAM,KAAc,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACrD,IAAW,MAAM,CAAC,CAAU,IAAI,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;IAGnD,IAAW,OAAO,KAAc,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;IACvD,IAAW,OAAO,CAAC,CAAU,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC;IAQ9C,KAAK;QACR,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;IAC1B,CAAC;IAMO,MAAM;QACV,IAAI,CAAC,IAAI,CAAC,QAAQ;YAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACzC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,OAAO,CAAC;QAChC,IAAI,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IAIM,OAAO;QACV,IAAI,IAAI,CAAC,YAAY;YAAE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;IAChF,CAAC;IAKO,UAAU;QACd,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO;YACtC,IAAI,CAAC,OAAO,GAAG,eAAM,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;aAC/F;YACD,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;YACjB,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAC;SAC1C;IACL,CAAC;IAKM,MAAM,CAAC,SAAqB;QAC/B,IAAI,CAAC,IAAI,CAAC,OAAO;YAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACvC,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,OAAO,IAAI,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,SAAS,CAAC,SAAS,IAAI,SAAS,CAAC,GAAG,IAAI,SAAS,CAAC,GAAG,EAAE;YAC/H,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC,SAAS,CAAC;YACtC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC;YAC7D,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC;YAC7D,IAAI,CAAC,UAAU,EAAE,CAAC;YAClB,IAAI,CAAC,MAAM,EAAE,CAAC;YACd,OAAO,IAAI,CAAC;SACf;QACD,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ;AAvHD,8BAuHC","sourcesContent":["import { Common } from \"./common\";\r\n\r\nexport interface ILiveQuote {\r\n    timeStamp: Date;\r\n    symbol?: string;\r\n    reqID?: string;\r\n    bid: number;\r\n    ask: number;\r\n    spread?: number;\r\n    lqFlag?: boolean\r\n}\r\n\r\nexport interface IAverageSpread {\r\n    symbol: string;\r\n    avgSpread: number;\r\n    avgFlag: boolean;\r\n\r\n    reset(): void;\r\n    avgCalc(): void;\r\n}\r\n\r\nexport class LiveQuote implements ILiveQuote, IAverageSpread {\r\n\r\n    /**\r\n     *  Constructor\r\n     */\r\n    constructor(\r\n        private _symbol: string,\r\n        private _reqID: string,\r\n        private _brokerName: string,\r\n        private _bid: number,\r\n        private _ask: number,\r\n        private _fpoint: number = 5,\r\n        private _timeStamp: Date = null,\r\n        private _spread: number = 0,\r\n        private _sumSpread: number = 0,\r\n        private _avgSpread: number = 0,\r\n        private _spreadCount: number = 0,\r\n        private _lqFlag: boolean = false,\r\n        private _avgFlag: boolean = false) {\r\n\r\n    }\r\n\r\n\r\n\r\n    public get reqID(): string { return this._reqID; }\r\n    public set reqID(v: string) { this._reqID = v; }\r\n\r\n    public get timeStamp(): Date { return this._timeStamp; }\r\n    public set timeStamp(v: Date) { this._timeStamp = v; }\r\n\r\n    public get symbol(): string { return this._symbol; }\r\n    public set symbol(v: string) { this._symbol = v; }\r\n\r\n    public get brokerName(): string { return this._brokerName; }\r\n    public set brokerName(v: string) { this._brokerName = v; }\r\n\r\n    public get bid(): number { return this._bid; }\r\n    public set bid(v: number) { this._bid = v; }\r\n\r\n    public get ask(): number { return this._ask; }\r\n    public set ask(v: number) { this._ask = v; }\r\n\r\n    public get fpoint(): number { return this._fpoint; }\r\n    public set fpoint(v: number) { this._fpoint = v; }\r\n\r\n    public get spread(): number { return this._spread; }\r\n    public set spread(v: number) { this._spread = v; }\r\n\r\n    public get sumSpread(): number { return this._sumSpread; }\r\n    public set sumSpread(v: number) { this._sumSpread = v; }\r\n\r\n    public get avgSpread(): number { return this._avgSpread; }\r\n    public set avgSpread(v: number) { this._avgSpread = v; }\r\n\r\n    public get msgCount(): number { return this._spreadCount; }\r\n    public set msgCount(v: number) { this._spreadCount = v; }\r\n\r\n    public get lqFlag(): boolean { return this._lqFlag; }\r\n    public set lqFlag(v: boolean) { this._lqFlag = v; }\r\n\r\n\r\n    public get avgFlag(): boolean { return this._avgFlag; }\r\n    public set avgFlag(v: boolean) { this._avgFlag = v; }\r\n\r\n\r\n\r\n\r\n    /**\r\n     * reset\r\n     */\r\n    public reset(): void {\r\n        this._spreadCount = 0;\r\n        this._avgSpread = 0;\r\n        this._avgFlag = false;\r\n    }\r\n\r\n    /**\r\n     * addSum\r\n     *  - add spread to sum\r\n     */\r\n    private addSum() {\r\n        if (!this._avgFlag) this._avgFlag = true;\r\n        this._sumSpread += this._spread;\r\n        this._spreadCount++;\r\n    }\r\n    /**\r\n     * avgCalc\r\n     */\r\n    public avgCalc(): void {\r\n        if (this._spreadCount) this._avgSpread = this.sumSpread / this._spreadCount;\r\n    }\r\n\r\n    /**\r\n     * spreadCalc\r\n     */\r\n    private spreadCalc() {\r\n        if (this._ask && this._bid && this._fpoint)\r\n            this._spread = Common.roundToFixed((this._ask - this._bid) * Math.pow(10, this._fpoint - 1), 1);\r\n        else {\r\n            this._spread = 0;\r\n            throw new Error('Error on spreadCalc');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * update\r\n     */\r\n    public update(liveQuote: ILiveQuote): boolean {\r\n        if (!this._lqFlag) this._lqFlag = true;\r\n        if ((liveQuote.symbol == this._symbol || liveQuote.reqID == this._reqID) && liveQuote.timeStamp && liveQuote.ask && liveQuote.bid) {\r\n            this._timeStamp = liveQuote.timeStamp;\r\n            this._bid = liveQuote.bid === -1 ? this._bid : liveQuote.bid;\r\n            this._ask = liveQuote.ask === -1 ? this._ask : liveQuote.ask;\r\n            this.spreadCalc();\r\n            this.addSum();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}"]}