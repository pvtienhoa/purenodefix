"use strict";var __awaiter=this&&this.__awaiter||function(e,n,o,t){return new(o||(o=Promise))(function(i,r){function s(e){try{c(t.next(e))}catch(e){r(e)}}function a(e){try{c(t.throw(e))}catch(e){r(e)}}function c(e){e.done?i(e.value):new o(function(n){n(e.value)}).then(s,a)}c((t=t.apply(e,n||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const path=require("path"),jspurefix_1=require("jspurefix"),common_1=require("./MDCapture/common"),logFactory=new jspurefix_1.JsFixWinstonLogFactory(jspurefix_1.WinstonLogger.consoleOptions("info"));class Launcher{constructor(e){this.logger=logFactory.logger("launcher");var n=__dirname;const o=path.join(n,e);this.logger.info(`init = ${o}`),this.appConfig=require(o)}run(){return new Promise((e,n)=>{const o=this.logger;o.info("launching .."),this.setup().then(()=>{o.info(".. done"),e()}).catch(e=>{o.error(e),n(e)})})}setup(){return __awaiter(this,void 0,void 0,function*(){const e=common_1.Common.makeFConfig(this.appConfig),n=yield jspurefix_1.makeConfig(e,logFactory,new jspurefix_1.SessionMsgFactory(e));this.logger.info("create initiator"),this.logger.info("launching ....");var o=yield this.getInitiator(n);return Promise.all([o])})}}exports.Launcher=Launcher;